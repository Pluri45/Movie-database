# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
.DS_Store
dist
dist-ssr
coverage
*.local

/cypress/videos/
/cypress/screenshots/

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

*.tsbuildinfo





<!-- <script lang="ts">
import { RouterLink, useRoute } from "vue-router";
import { defineComponent, onMounted, ref } from 'vue';
import axiosClient from '../axiosClient';
import { isNotFound, searchQuery, searchResults} from '../composable/index'


export default defineComponent({
  components: {
    RouterLink,
},

  setup() {
    const route = useRoute();
    const isLoading = ref(true);

    const getData = async () => {
      try {
        const response = await axiosClient.get(`/search/tv?query=${searchQuery.value}`);
        searchResults.value = response.data.results
       
        if(searchResults.value.length > 0) {
          isNotFound.value = false
        } else {
          isNotFound.value = true
        }
      } catch (error) {
        console.error('Error fetching movies:', error);
      } finally {
        isLoading.value = false;
      }
    };

    const isActiveLink = (routePath: string) => {
      return route.path === routePath;
    };

    return {
      isActiveLink,
      searchQuery,
      isLoading,
      getData,
  
    };
  },
});
</script>


<template>
  <nav class="bg-black border-b border-white">
    <div class="mx-auto max-w-7xl px-2 sm:px-6 lg:px-2">
      <div class="flex h-20 items-center justify-between ">
        <div
          class="flex flex-1 items-center justify-center md:items-stretch md:justify-start  bg-gray-200 rounded-full"
        >
          <div class="flex space-x-2 ">
          <!-- Logo -->
          <RouterLink class="flex flex-shrink-0 items-center mr-4" to="/">
            <img
              class="h-10 w-auto px-3 py-2 rounded-md ml-2"
              v-bind:src="'/images/new_image.svg'"
              alt="IMDB"
            />
          </RouterLink>
         
              <RouterLink
                to="/"
                :class="[
                  isActiveLink('/')
                    ? 'bg-gray-500'
                    : 'hover:bg-gray-900 hover:text-white',
                  'text-white',
                  'font-bold',
                  'px-4',
                  'py-2',
                  'rounded-full',
                ]"
                >Movies
              </RouterLink>

              <RouterLink
                to="/shows"
                :class="[
                  isActiveLink('/shows')
                    ? 'bg-gray-500'
                    : 'hover:bg-gray-900 hover:text-white',
                  'text-white',
                  'font-bold',
                  'px-4',
                  'py-2',
                  'rounded-full',
                ]"
                >Shows
              </RouterLink>
              </div>        
              <div class="relative flex items-center mr-2 md:ml-auto">
                <div class="absolute left rounded-full">
                  <i class="pi pi-search text-gray-500 ml-2" style="font-size: 1rem"></i>
                </div>   
              
                  <input
                    type="search"
                    v-model="searchQuery"
                    @keydown.enter="getData" 
                    class="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                    placeholder="Search for movies & TVshows"
                    id="search-input"
                  />
             
              </div>
                            
                </div>                 
            </div>
          </div>
     
  </nav>
</template> -->
